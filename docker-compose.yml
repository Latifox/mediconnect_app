version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: mediconnect-postgres
    environment:
      POSTGRES_DB: mediconnect
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - mediconnect-network

  # Backend Spring Boot Application
  backend:
    build:
      context: ./mediconnect-backend
      dockerfile: Dockerfile
    container_name: mediconnect-backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mediconnect
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      JWT_SECRET: ${JWT_SECRET:-NdRgUkXp2s5v8y/B?E(H+MbQeShVmYq3t6w9z$C&F)J@NcRfUjWnZr4u7x!A%D*G}
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
      - "9092:9092"
    volumes:
      - backend_uploads:/app/uploads
    restart: unless-stopped
    networks:
      - mediconnect-network

  # Frontend React Native Application
  frontend:
    build:
      context: ./mediconnect-frontend
      dockerfile: Dockerfile
    container_name: mediconnect-frontend
    depends_on:
      - backend
    environment:
      REACT_NATIVE_PACKAGER_HOSTNAME: ${REACT_NATIVE_PACKAGER_HOSTNAME:-localhost}
      API_URL: http://backend:8080
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    volumes:
      - ./mediconnect-frontend:/app
      - node_modules:/app/node_modules
    restart: unless-stopped
    networks:
      - mediconnect-network

# Volumes
volumes:
  postgres_data:
  backend_uploads:
  node_modules:

# Networks
networks:
  mediconnect-network:
    driver: bridge 